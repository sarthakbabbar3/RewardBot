---
- hosts: SE_Project
  become: yes
  tasks:
    - include_vars: git_token.yml

    - name: Install the gpg key for nodejs LTS
      shell: 'curl -fsSL https://deb.nodesource.com/setup_16.x | sudo -E bash -'

    - name: Install the nodejs
      shell: 'sudo apt install -y nodejs'

    - name: Clone Github
      git:
        repo: https://{{git_key}}@github.ncsu.edu/csc510-s2022/CSC510-20.git
        dest: /project/
        clone: yes
        update: yes

    - name: Copy env file to remote server
      copy:
        src: .env
        dest: /project

    - name: Update apt repo and cache on all Ubuntu boxes
      apt:
        update_cache: yes
        force_apt_get: yes
        cache_valid_time: 3600
        
    - name: Upgrade all packages on servers
      apt:
        upgrade: dist
        force_apt_get: yes

    - name: Install required packages
      apt:
        name:
          - wget
          - python3-psycopg2
          - acl
        state: latest

    - name: Set up Postgres 14 repo
      shell: |
        echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
      args:
        warn: no

    - name: Install postgresql
      apt:
        name: postgresql-14
        update_cache: yes
      notify:
        - Enable Postgresql

    - name: Ensure PostgreSQL is listening on *
      lineinfile:
        dest: /etc/postgresql/14/main/postgresql.conf
        regexp: '^listen_addresses\s*='
        line: "listen_addresses='*'"
        state: present

    - name: Restart postgres
      shell: sudo service postgresql restart

    - name: Add new configuration to "pg_hba.conf"
      blockinfile:
        dest: /etc/postgresql/14/main/pg_hba.conf
        block: |
          host    all             all             0.0.0.0/0                md5
          host    all             all             ::/0                     md5

    - name: Restart postgres to reflect new configuration changes
      shell: sudo service postgresql restart

    - name: Change peer identification to trust
      shell: /bin/sed -i '/^local/s/peer/trust/' /etc/postgresql/14/main/pg_hba.conf
      args:
        warn: no

    - name: Restart postgres to reflect peer identification changes
      shell: sudo service postgresql restart
      
    - name: Setting variable to store database user details
      shell: psql -U postgres -tAc "SELECT 1 FROM pg_roles WHERE rolname='{{postgres_user}}'" | grep -q '1' && echo 'matched' || echo 'unmatched'
      register: user_output

    - name: Create user in Postgres
      command: psql -U postgres -c "CREATE USER {{postgres_user}} WITH SUPERUSER PASSWORD '{{postgres_user_password}}';"
      when: user_output.stdout != 'matched'

    - name: Setting varaible to store database exists details
      shell: psql -U postgres -tAc "SELECT 1 FROM pg_database WHERE datname = '{{postgres_database}}'" | grep -q '1' && echo 'matched' || echo 'unmatched'
      register: db_exists_output

    - name: Create DB in Postgres
      command: psql -U postgres -c 'create database {{postgres_database}} with owner = {{postgres_user}};'
      when: db_exists_output.stdout != 'matched'

    - name: Install forever globally
      shell: 'npm i -g forever'
    
    - name: Install packages based on package.json.
      npm:
        path: /project/

    - name: Go to the folder and execute command
      command: chdir=/project/ forever start index.js


  handlers:
    - name: Enable Postgresql
      systemd:
        name: postgresql
        enabled: yes